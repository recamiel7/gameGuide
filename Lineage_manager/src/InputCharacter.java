//////////////////////////////////////////////////////////////////////////////////////////////////
//																								//
//										캐릭터기록 관리용 GUI										//
//																								//
//////////////////////////////////////////////////////////////////////////////////////////////////


public class InputCharacter extends javax.swing.JFrame {
	
	static GuideManager manager = GuideManager.createManagerInst();
    /**
     * Creates new form inputCharacter
     */
    public InputCharacter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        cInputPanel = new javax.swing.JPanel();
        recordLabel = new javax.swing.JLabel();
        levelLabel = new javax.swing.JLabel();
        levelText = new javax.swing.JTextField();
        powerLabel = new javax.swing.JLabel();
        powerText = new javax.swing.JTextField();
        powerRankLabel = new javax.swing.JLabel();
        powerRankText = new javax.swing.JTextField();
        honorRankLabel = new javax.swing.JLabel();
        honorRankText = new javax.swing.JTextField();
        achievementRankLabel = new javax.swing.JLabel();
        achievementRankText = new javax.swing.JTextField();
        codeLabel = new javax.swing.JLabel();
        codeText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        crEditText = new javax.swing.JTextArea();
        showAllButton = new javax.swing.JButton();
        recordSaveButton = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setSize(new java.awt.Dimension(500, 800));
        setResizable(false);

        recordLabel.setFont(new java.awt.Font("굴림", 1, 15)); // NOI18N
        recordLabel.setText("캐릭터 성장 기록");

        levelLabel.setText("레벨");

        levelText.setColumns(6);

        powerLabel.setText("전투력");

        powerText.setColumns(6);

        powerRankLabel.setText("전투력랭킹");

        powerRankText.setColumns(6);

        honorRankLabel.setText("명예랭킹");

        honorRankText.setColumns(6);

        achievementRankLabel.setText("업적랭킹");

        achievementRankText.setColumns(6);
        
        codeLabel.setText("코드");

        codeText.setColumns(6);

        crEditText.setColumns(20);
        crEditText.setRows(5);
        crEditText.setEditable(false);
        jScrollPane1.setViewportView(crEditText);

        
        showAllButton.setText("전체출력");
        recordSaveButton.setText("저장");
        changeButton.setText("수정(검색)");
        deleteButton.setText("삭제(검색)");
        //전체 출력 버튼 클릭시 실행
        showAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               crEditText.append(manager.getCodeAllData());
            }
        });

        //성장기록 저장 버튼 클릭시 실행
        recordSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveRecord();
                
                levelText.setText("");
                powerText.setText("");
                powerRankText.setText("");
                honorRankText.setText("");
                achievementRankText.setText("");
            }
        });

        //수정버튼 클릭시 실행
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String cCode = codeText.getText();
                
                if(changeButton.getText().equals("수정(검색)")){
                	if(cCode == null){
                    	crEditText.append("코드를 입력해주세요. \n");
                    	return;
                	}
                	
                	String sh = manager.search(cCode);
                	if(sh == null){
                		crEditText.append("코드를 다시 확인해주세요. \n");
                		return;
                	}
                	else
                		crEditText.append(sh);
                	
                	showAllButton.setEnabled(false);
                	recordSaveButton.setEnabled(false);
                	deleteButton.setEnabled(false);
                	changeButton.setText("수정(진행)");
                }
                
                else{
                	String level = levelText.getText();
                	if(level.equals("")) {level = null;}
                	String power = powerText.getText();
                	if(power.equals("")) {power = null;}
                	String pRank = powerRankText.getText();
                	if(pRank.equals("")) {pRank = null;}
                	String hRank = honorRankText.getText();
                	if(hRank.equals("")) {hRank = null;}
                	String aRank = achievementRankText.getText();
                	if(aRank.equals("")) {aRank = null;}
                	
                	String check = manager.changeDate(cCode, level, power, pRank, hRank, aRank);
                	if(check == null){
                		crEditText.append("수정할 데이터가 입력되지 않았습니다.\n");
                		return;
                	}
                	else
                		crEditText.append(check);
                	
                	showAllButton.setEnabled(true);
                	recordSaveButton.setEnabled(true);
                	deleteButton.setEnabled(true);
                	changeButton.setText("수정(검색)");
                	codeText.setText("");
                }
                
            }
        });

        //삭제 버튼 클릭시 실행
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                String dCode = codeText.getText();
                
                if(deleteButton.getText().equals("삭제(검색)")){
                	if(dCode == null){
                    	crEditText.append("코드를 입력해주세요. \n");
                    	return;
                	}
                	
                	showAllButton.setEnabled(false);
                	recordSaveButton.setEnabled(false);
                	changeButton.setEnabled(false);
                	deleteButton.setText("삭제(진행)");
                	
                	String sh = manager.search(dCode);
                	if(sh == null)
                		crEditText.append("코드를 다시 확인해주세요. \n");
                	else{
                		crEditText.append(sh);
                		crEditText.append("삭제할 기록이 맞으면 삭제버튼을 다시 눌러주세요. \n");
                	}
                }
                
                else{
                	
                	String check = manager.deleteData(dCode);
                	if(check == null){
                		crEditText.append("삭제 오류");
                	}
                	else
                		crEditText.append(check);
                	
                	showAllButton.setEnabled(true);
                	recordSaveButton.setEnabled(true);
                	changeButton.setEnabled(true);
                	deleteButton.setText("삭제(검색)");
                	codeText.setText("");
                }
                
            }
        });

        javax.swing.GroupLayout cInputPanelLayout = new javax.swing.GroupLayout(cInputPanel);
        cInputPanel.setLayout(cInputPanelLayout);
        cInputPanelLayout.setHorizontalGroup(
            cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cInputPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cInputPanelLayout.createSequentialGroup()
                        .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cInputPanelLayout.createSequentialGroup()
                                .addComponent(showAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(recordSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(changeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1))
                        .addGap(20, 20, 20))
                    .addGroup(cInputPanelLayout.createSequentialGroup()
                        .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(levelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(honorRankLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(honorRankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(levelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(cInputPanelLayout.createSequentialGroup()
                                .addComponent(achievementRankLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(achievementRankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cInputPanelLayout.createSequentialGroup()
                                .addComponent(powerLabel)
                                .addGap(24, 24, 24)
                                .addComponent(powerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(recordLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(15, 15, 15)
                        .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(codeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(powerRankLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cInputPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(powerRankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cInputPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14))))
        );
        cInputPanelLayout.setVerticalGroup(
                cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(cInputPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(recordLabel)
                    .addGap(12, 12, 12)
                    .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(levelLabel)
                        .addComponent(levelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(powerLabel)
                        .addComponent(powerText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(powerRankLabel)
                        .addComponent(powerRankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(honorRankLabel)
                        .addComponent(honorRankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(achievementRankLabel)
                        .addComponent(achievementRankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(codeLabel)
                        .addComponent(codeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(cInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(showAllButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(changeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton)
                        .addComponent(recordSaveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(19, 19, 19))
            );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cInputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>      
    
    void saveRecord(){ //입력된 값으로 수정하는 메소드
    	String level = levelText.getText();
    	String power = powerText.getText();
    	String pRank = powerRankText.getText();
    	String hRank = honorRankText.getText();
    	String aRank = achievementRankText.getText();
    	if(level.equals("")||power.equals("")||pRank.equals("")||hRank.equals("")||aRank.equals("")){
    		crEditText.append("입력되지 않은 값이 있는지 확인하십시오.\n");
    		return;
    	}
    		
    	manager.inputRecord(level, power, pRank, hRank, aRank);
    	crEditText.append("저장완료\n");
    }                                        

    /**
     * @param args the command line arguments
     */
    void inputCharacter() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputCharacter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputCharacter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify     
    private javax.swing.JLabel codeLabel;
    private javax.swing.JTextField codeText;
    private javax.swing.JLabel achievementRankLabel;
    private javax.swing.JTextField achievementRankText;
    private javax.swing.JPanel cInputPanel;
    private javax.swing.JButton changeButton;
    private javax.swing.JTextArea crEditText;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel honorRankLabel;
    private javax.swing.JTextField honorRankText;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel levelLabel;
    private javax.swing.JTextField levelText;
    private javax.swing.JLabel powerLabel;
    private javax.swing.JLabel powerRankLabel;
    private javax.swing.JTextField powerRankText;
    private javax.swing.JTextField powerText;
    private javax.swing.JLabel recordLabel;
    private javax.swing.JButton recordSaveButton;
    private javax.swing.JButton showAllButton;
    // End of variables declaration                   
}

