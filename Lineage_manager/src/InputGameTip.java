//////////////////////////////////////////////////////////////////////////////////////////////////
//																								//
//										팁정보 저장용 GUI											//
//																								//
//////////////////////////////////////////////////////////////////////////////////////////////////


public class InputGameTip extends javax.swing.JFrame {

	static GuideManager manager = GuideManager.createManagerInst();
    /**
     * Creates new form InputGameTip
     */
    public InputGameTip() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        gameTipPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tipEditText = new javax.swing.JTextArea();
        diaTipBtn = new javax.swing.JButton();
        strengthenTipBtn = new javax.swing.JButton();
        challengeTipBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(450, 320));
        setSize(new java.awt.Dimension(450, 320));
        setResizable(false);

        tipEditText.setColumns(20);
        tipEditText.setRows(5);
        jScrollPane1.setViewportView(tipEditText);

        diaTipBtn.setText("다이아Tip 입력");
        strengthenTipBtn.setText("강화Tip 입력");
        challengeTipBtn.setText("결투장Tip 입력");
        
        //다아이Tip버튼 클릭시 실행
        diaTipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	if(diaTipBtn.getText().equals("다이아Tip 입력")){
            		strengthenTipBtn.setEnabled(false);
            		challengeTipBtn.setEnabled(false);
            		
            		diaTipBtn.setText("다이아Tip 저장");
            		tipEditText.append(manager.tipStr[0]);
            	}
            	else{
            		strengthenTipBtn.setEnabled(true);
            		challengeTipBtn.setEnabled(true);
            		
            		diaTipBtn.setText("다이아Tip 입력");
            		manager.tipStr[0] = tipEditText.getText();
            		tipEditText.setText("");
            	}
            }
        });

        //강화Tip버튼 클릭시 실행
        strengthenTipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	if(strengthenTipBtn.getText().equals("강화Tip 입력")){
            		challengeTipBtn.setEnabled(false);
            		diaTipBtn.setEnabled(false);
            		
            		strengthenTipBtn.setText("강화Tip 저장");
            		tipEditText.append(manager.tipStr[1]);
            	}
            	else{
            		challengeTipBtn.setEnabled(true);
            		diaTipBtn.setEnabled(true);
            		
            		strengthenTipBtn.setText("강화Tip 입력");
            		manager.tipStr[1] = tipEditText.getText();
            		tipEditText.setText("");
            	}
            }
        });

        //결투장Tip버튼 클릭시 실행
        challengeTipBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	if(challengeTipBtn.getText().equals("결투장Tip 입력")){
            		strengthenTipBtn.setEnabled(false);
            		diaTipBtn.setEnabled(false);
            		
            		challengeTipBtn.setText("결투장Tip 저장");
            		tipEditText.append(manager.tipStr[2]);
            	}
            	else{
            		strengthenTipBtn.setEnabled(true);
            		diaTipBtn.setEnabled(true);
            		
            		challengeTipBtn.setText("결투장Tip 입력");
            		manager.tipStr[2] = tipEditText.getText();
            		tipEditText.setText("");
            	}
            }
        });

        javax.swing.GroupLayout gameTipPanel1Layout = new javax.swing.GroupLayout(gameTipPanel1);
        gameTipPanel1.setLayout(gameTipPanel1Layout);
        gameTipPanel1Layout.setHorizontalGroup(
            gameTipPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameTipPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gameTipPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gameTipPanel1Layout.createSequentialGroup()
                        .addComponent(diaTipBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(strengthenTipBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(challengeTipBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        gameTipPanel1Layout.setVerticalGroup(
            gameTipPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameTipPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gameTipPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(diaTipBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(challengeTipBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(strengthenTipBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameTipPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gameTipPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    void inputGameTip() {
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputGameTip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputGameTip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputGameTip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputGameTip.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputGameTip().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton challengeTipBtn;
    private javax.swing.JButton diaTipBtn;
    private javax.swing.JPanel gameTipPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton strengthenTipBtn;
    private javax.swing.JTextArea tipEditText;
    // End of variables declaration                   
}
